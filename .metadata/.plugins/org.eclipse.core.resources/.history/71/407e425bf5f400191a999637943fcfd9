/*
 * Written By Bradley Grose
 */
public class Dresser {
	private Clothing[][] clothes;
	
	//Constructors
	public Dresser()
	{
		clothes = new Clothing[5][10];
	}
	
	//Add Clothes
	public void add(Clothing aClothing)
	{
		if(aClothing.getType().contentEquals("UNDERGARMENT"))
			addSpot(0, aClothing);
		else if(aClothing.getType().contentEquals("SOCKS") || aClothing.getType().contentEquals("STOCKINGS")) 
			addSpot(1, aClothing);
		else if(aClothing.getType().contentEquals("TOP"))
			addSpot(2, aClothing);
		else if(aClothing.getType().contentEquals("BOTTOM"))
			addSpot(3, aClothing);
		else if(aClothing.getType().contentEquals("CAPE"))
			addSpot(4, aClothing);
	}
	
	public void remove(Clothing aClothing)
	{
		for (int i = 0; i < clothes.length; i++) 
		{
			for (int j = 0; j < 5; j++)
			{
				if (clothes[i][j] == null) 
					continue;
				if (clothes[i][j] == aClothing)
				{
					clothes[i][j] = null;
					break;
				}
			}
		}
	}
	
	
	public void print()
	{
		for(int i=0; i<clothes.length; i++)
		{
			System.out.println("Drawer "+i);
			for(int j=0; j<10; i++)
			{
				if(clothes[i][j] != null)
				{
					System.out.println(clothes[i][j].toString());
					break;
				}
			}
		}
	}
	
	public void addSpot(int drawer, Clothing aClothing)
	{
		for(int i=0; i<10; i++)
		{
			if(clothes[drawer][i] == null)
			{
				clothes[drawer][i] = aClothing;
			}
		}
	}
}
